/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./script.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./decorators.ts":
/*!***********************!*\
  !*** ./decorators.ts ***!
  \***********************/
/*! exports provided: changeInRow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"changeInRow\", function() { return changeInRow; });\nfunction changeInRow(target, name, descriptor) {\r\n    var originalMethod = descriptor.value;\r\n    descriptor.value = function (...args) {\r\n        var result = originalMethod.apply(this, args);\r\n        if (result == \"EASY\")\r\n            document.getElementById(\"mode\").innerHTML = `Mode: HARD`;\r\n        else\r\n            document.getElementById(\"mode\").innerHTML = `Mode: EASY`;\r\n        document.getElementById(\"zmien\").innerHTML = `Change to ${result}`;\r\n        console.log(`Zmien na ${result}`);\r\n        return result;\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack:///./decorators.ts?");

/***/ }),

/***/ "./kulki.ts":
/*!******************!*\
  !*** ./kulki.ts ***!
  \******************/
/*! exports provided: Kulki */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Kulki\", function() { return Kulki; });\n/* harmony import */ var _queue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queue */ \"./queue.ts\");\n/* harmony import */ var _script__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./script */ \"./script.ts\");\n/* harmony import */ var _decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decorators */ \"./decorators.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\n\r\n\r\n\r\nclass Kulki {\r\n    constructor(n, x) {\r\n        this.divy = [];\r\n        this.tab = new Array();\r\n        this.zablokuj = false;\r\n        this.licznikKulek = x;\r\n        this.inLine = 3;\r\n        this.kolIl = 5;\r\n        this.nastKolor = new Array(3);\r\n        this.punkty = 0;\r\n        this.n = n;\r\n        this.x = x;\r\n        this.p1 = -1;\r\n        this.q1 = -1;\r\n        this.p2 = -1;\r\n        this.q2 = -1;\r\n        this.z1 = -1;\r\n        this.z2 = -1;\r\n        this.losujNastepneKolory();\r\n        for (let i = 0; i < n; i++) {\r\n            this.divy.push(new Array(this.n));\r\n            let tab2 = new Array();\r\n            for (let i2 = 0; i2 < n; i2++) {\r\n                tab2.push(0);\r\n            }\r\n            this.tab.push(tab2);\r\n        }\r\n        this.narysujPole();\r\n        this.wylosujSciany();\r\n    }\r\n    wylosujSciany() {\r\n        //\r\n        let kolory = [\"blue\", \"red\", \"black\", \"green\", \"darkorchid\"];\r\n        let rand = 0;\r\n        while (rand < this.x) {\r\n            let x1 = Math.floor(Math.random() * this.n);\r\n            let y1 = Math.floor(Math.random() * this.n);\r\n            if (this.tab[x1][y1] == 0) {\r\n                this.tab[x1][y1] = -1;\r\n                let kul = document.createElement(\"div\");\r\n                kul.className = \"kulka\";\r\n                let rand2 = Math.floor(Math.random() * kolory.length);\r\n                kul.style.backgroundColor = kolory[rand2];\r\n                //kul.style.backgroundImage=\"url('./grafiki/\"+kolory[rand2]+\".png')\"\r\n                this.divy[x1][y1].appendChild(kul);\r\n                rand++;\r\n            }\r\n        }\r\n    }\r\n    wypiszTablice() {\r\n        for (let i = 0; i < this.n; i++) {\r\n            let a = \"\";\r\n            for (let i2 = 0; i2 < this.n; i2++) {\r\n                if (this.tab[i][i2] == -1)\r\n                    a += \"X \";\r\n                else if (this.tab[i][i2] == -2)\r\n                    a += \"P \";\r\n                else if (this.tab[i][i2] == -3)\r\n                    a += \"K \";\r\n                else if (this.tab[i][i2] == -4)\r\n                    a += \". \";\r\n                else\r\n                    a += this.tab[i][i2].toString() + \" \";\r\n            }\r\n            console.log(a + \"\\n\");\r\n        }\r\n    }\r\n    znajdzSciezke() {\r\n        let q = new _queue__WEBPACK_IMPORTED_MODULE_0__[\"Queue\"]();\r\n        let t = [this.p1, this.q1, 1];\r\n        q.push(t);\r\n        this.z1 = -1;\r\n        while (!q.isEmpty()) {\r\n            let z = q.pop();\r\n            if (z[0] == this.p2 && z[1] == this.q2) {\r\n                this.z1 = this.p2;\r\n                this.z2 = this.q2;\r\n                this.tab[z[0]][z[1]] = z[2];\r\n                break;\r\n            }\r\n            if (this.inRange(z[0] + 1, z[1])) {\r\n                if (this.tab[z[0] + 1][z[1]] == 0) {\r\n                    this.tab[z[0] + 1][z[1]] = z[2];\r\n                    let t2 = [z[0] + 1, z[1], z[2] + 1];\r\n                    q.push(t2);\r\n                }\r\n            }\r\n            if (this.inRange(z[0] - 1, z[1])) {\r\n                if (this.tab[z[0] - 1][z[1]] == 0) {\r\n                    this.tab[z[0] - 1][z[1]] = z[2];\r\n                    let t2 = [z[0] - 1, z[1], z[2] + 1];\r\n                    q.push(t2);\r\n                }\r\n            }\r\n            if (this.inRange(z[0], z[1] + 1)) {\r\n                if (this.tab[z[0]][z[1] + 1] == 0) {\r\n                    this.tab[z[0]][z[1] + 1] = z[2];\r\n                    let t2 = [z[0], z[1] + 1, z[2] + 1];\r\n                    q.push(t2);\r\n                }\r\n            }\r\n            if (this.inRange(z[0], z[1] - 1)) {\r\n                if (this.tab[z[0]][z[1] - 1] == 0) {\r\n                    this.tab[z[0]][z[1] - 1] = z[2];\r\n                    let t2 = [z[0], z[1] - 1, z[2] + 1];\r\n                    q.push(t2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    lol(num) {\r\n        let licz = 0;\r\n        if (num == 3) {\r\n            this.inLine = 5;\r\n            return \"EASY\";\r\n        }\r\n        else\r\n            this.inLine = 3;\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let i2 = 0; i2 < 9; i2++)\r\n                if (this.divy[i][i2].childNodes[0]) {\r\n                    licz++;\r\n                    this.sprawdzPunkty(true, i, i2, true);\r\n                }\r\n        }\r\n        setTimeout(() => {\r\n            for (let i = 0; i < 9; i++) {\r\n                for (let i2 = 0; i2 < 9; i2++)\r\n                    if (this.divy[i][i2].childNodes[0]) {\r\n                        licz--;\r\n                    }\r\n            }\r\n            this.punkty += licz;\r\n            this.licznikKulek -= licz;\r\n            document.getElementById(\"punkty\").innerHTML = \"Punkty: \" + this.punkty;\r\n            this.zablokuj = false;\r\n        }, 1000);\r\n        return \"HARD\";\r\n    }\r\n    inRange(ox, oy) {\r\n        if (ox < 0 || oy < 0 || ox >= this.n || oy >= this.n)\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n    narysujSciezke() {\r\n        if (this.z1 != -1) {\r\n            let fin = this.tab[this.z1][this.z2];\r\n            let poz1 = this.z1;\r\n            let poz2 = this.z2;\r\n            fin--;\r\n            this.sx = [];\r\n            this.sy = [];\r\n            while (fin > 0) {\r\n                this.tab[poz1][poz2] = -4;\r\n                this.sx.push(poz1);\r\n                this.sy.push(poz2);\r\n                this.divy[poz1][poz2].style.backgroundImage = \"url('./grafiki/h.png')\";\r\n                fin--;\r\n                if (this.inRange(poz1 + 1, poz2)) {\r\n                    if (this.tab[poz1 + 1][poz2] == fin) {\r\n                        poz1++;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (this.inRange(poz1 - 1, poz2)) {\r\n                    if (this.tab[poz1 - 1][poz2] == fin) {\r\n                        poz1--;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (this.inRange(poz1, poz2 + 1)) {\r\n                    if (this.tab[poz1][poz2 + 1] == fin) {\r\n                        poz2++;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (this.inRange(poz1, poz2 - 1)) {\r\n                    if (this.tab[poz1][poz2 - 1] == fin) {\r\n                        poz2--;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            this.sx.push(this.p1);\r\n            this.sy.push(this.q1);\r\n            let sx = this.sx;\r\n            let sy = this.sy;\r\n            for (let i = 0; i < sx.length; i++) {\r\n                if (i == 0) {\r\n                    this.divy[sx[i]][sy[i]].style.backgroundImage = \"url('./grafiki/kon.png')\";\r\n                    let t = 0;\r\n                    if (sx[i + 1] < sx[i])\r\n                        t = 2;\r\n                    if (sx[i + 1] > sx[i])\r\n                        t = 0;\r\n                    if (sy[i + 1] < sy[i])\r\n                        t = 1;\r\n                    if (sy[i + 1] > sy[i])\r\n                        t = 3;\r\n                    //console.log(t)\r\n                    this.divy[sx[i]][sy[i]].style.transform = \"rotate(\" + 90 * t + \"deg)\";\r\n                }\r\n                else if (i != sx.length - 1) {\r\n                    this.divy[sx[i]][sy[i]].style.transform = \"rotate(0deg)\";\r\n                    if (sx[i + 1] != sx[i])\r\n                        this.divy[sx[i]][sy[i]].style.backgroundImage = \"url('./grafiki/v.png')\";\r\n                    else\r\n                        this.divy[sx[i]][sy[i]].style.backgroundImage = \"url('./grafiki/h.png')\";\r\n                    if (sx[i - 1] != sx[i + 1] && sy[i - 1] != sy[i + 1]) {\r\n                        this.divy[sx[i]][sy[i]].style.backgroundImage = \"url('./grafiki/r.png')\";\r\n                        let t = 0;\r\n                        if (sy[i] == sy[i + 1] && sx[i] < sx[i + 1]) {\r\n                            if (sy[i - 1] > sy[i])\r\n                                t = 0;\r\n                            else\r\n                                t = 1;\r\n                        }\r\n                        if (sy[i] == sy[i + 1] && sx[i] > sx[i + 1]) {\r\n                            if (sy[i - 1] > sy[i])\r\n                                t = 3;\r\n                            else\r\n                                t = 2;\r\n                        }\r\n                        if (sx[i] == sx[i + 1] && sy[i] > sy[i + 1]) {\r\n                            if (sx[i - 1] > sx[i])\r\n                                t = 1;\r\n                            else\r\n                                t = 2;\r\n                        }\r\n                        if (sx[i] == sx[i + 1] && sy[i] < sy[i + 1]) {\r\n                            if (sx[i - 1] > sx[i])\r\n                                t = 0;\r\n                            else\r\n                                t = 3;\r\n                        }\r\n                        this.divy[sx[i]][sy[i]].style.transform = \"rotate(\" + 90 * t + \"deg)\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < this.n; i++) {\r\n            for (let i2 = 0; i2 < this.n; i2++) {\r\n                if (this.tab[i][i2] > 0)\r\n                    this.tab[i][i2] = 0;\r\n                else if (this.tab[i][i2] == -4)\r\n                    this.tab[i][i2] = 0;\r\n            }\r\n        }\r\n    }\r\n    narysujPole() {\r\n        let div = document.getElementById(\"cont\");\r\n        div.innerHTML = \"\";\r\n        div.style.width = 51 * this.n + \"px\";\r\n        div.style.height = 51 * this.n + \"px\";\r\n        //div.style.border=\"5px solid black\"\r\n        div.style.position = \"absolute\";\r\n        div.style.top = \"30px\";\r\n        div.style.left = \"200px\";\r\n        for (let i = 0; i < this.n; i++) {\r\n            for (let i2 = 0; i2 < this.n; i2++) {\r\n                let div2 = document.createElement(\"div\");\r\n                this.divy[i][i2] = div2;\r\n                div2.className = \"maly\";\r\n                div2.style.width = \"50px\";\r\n                div2.style.height = \"50px\";\r\n                div2.style.border = \"1px solid black\";\r\n                div2.style.position = \"absolute\";\r\n                div2.style.backgroundColor = \"white\";\r\n                div2.style.top = 51 * i + \"px\";\r\n                div2.style.left = 51 * i2 + \"px\";\r\n                let that = this;\r\n                div2.onclick = function () {\r\n                    if (that.tab[i][i2] == -1 && !that.zablokuj) {\r\n                        if (that.q1 == i2 && that.p1 == i) {\r\n                            that.divy[i][i2].childNodes[0].style.opacity = \"\";\r\n                            console.log(that.divy[i][i2].childNodes, that.q1, that.p1);\r\n                            that.p1 = -1;\r\n                            that.q1 = -1;\r\n                            that.z1 = -1;\r\n                        }\r\n                        else {\r\n                            for (let iii = 0; iii < that.n; iii++) {\r\n                                for (let iii2 = 0; iii2 < that.n; iii2++) {\r\n                                    if (that.divy[iii][iii2].childNodes[0])\r\n                                        that.divy[iii][iii2].childNodes[0].style.opacity = \"\";\r\n                                }\r\n                            }\r\n                            that.divy[i][i2].childNodes[0].style.opacity = \"50%\";\r\n                            //console.log(that.divy[i][i2].childNodes[0])\r\n                            if (that.p1 == -1) {\r\n                                that.p1 = i;\r\n                                that.q1 = i2;\r\n                            }\r\n                            else {\r\n                                if (!(that.p1 == i && that.q1 == i2))\r\n                                    that.divy[that.p1][that.q1].childNodes[0].style.opacity = \"\";\r\n                                that.p1 = i;\r\n                                that.q1 = i2;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (that.tab[i][i2] == 0 && !that.zablokuj) {\r\n                        if (that.z1 != -1) {\r\n                            that.tab[i][i2] = -1;\r\n                            that.p1 = -1;\r\n                            that.q1 = -1;\r\n                            that.p2 = -1;\r\n                            that.q2 = -1;\r\n                            that.z1 = -1;\r\n                            that.z2 = -1;\r\n                            for (let ii = 0; ii < that.n; ii++) {\r\n                                for (let ii2 = 0; ii2 < that.n; ii2++) {\r\n                                    that.divy[ii][ii2].style.backgroundImage = \"\";\r\n                                    that.divy[ii][ii2].style.transform = \"\";\r\n                                }\r\n                            }\r\n                            let lel = that.sx.length - 1;\r\n                            that.zablokuj = true;\r\n                            let int = setInterval(() => {\r\n                                that.divy[that.sx[lel]][that.sy[lel]].childNodes[0].style.opacity = \"\";\r\n                                let temp = that.divy[that.sx[lel]][that.sy[lel]].children[0];\r\n                                that.divy[that.sx[lel]][that.sy[lel]].removeChild(temp);\r\n                                that.tab[that.sx[lel]][that.sy[lel]] = 0;\r\n                                that.divy[that.sx[lel - 1]][that.sy[lel - 1]].appendChild(temp);\r\n                                lel--;\r\n                                if (lel == 0) {\r\n                                    clearInterval(int);\r\n                                    that.sprawdzPunkty(false, i, i2, false);\r\n                                }\r\n                            }, 40);\r\n                        }\r\n                    }\r\n                };\r\n                div2.onmouseover = function () {\r\n                    for (let ii = 0; ii < that.n; ii++) {\r\n                        for (let ii2 = 0; ii2 < that.n; ii2++) {\r\n                            that.divy[ii][ii2].style.backgroundImage = \"\";\r\n                            that.divy[ii][ii2].style.transform = \"\";\r\n                        }\r\n                    }\r\n                    if (that.tab[i][i2] == 0) {\r\n                        if (that.p1 != -1) {\r\n                            that.p2 = i;\r\n                            that.q2 = i2;\r\n                            that.znajdzSciezke();\r\n                            that.narysujSciezke();\r\n                        }\r\n                    }\r\n                };\r\n                div.appendChild(div2);\r\n            }\r\n        }\r\n        document.body.appendChild(div);\r\n    }\r\n    sprawdzPunkty(czy, x, y, qq) {\r\n        if (czy) {\r\n            this.serioSprawdz(x, y, qq);\r\n        }\r\n        else {\r\n            if (this.serioSprawdz(x, y, qq))\r\n                this.spwan();\r\n            else\r\n                this.zablokuj = false;\r\n        }\r\n    }\r\n    serioSprawdz(x, y, qq) {\r\n        let nvG = x;\r\n        let nvD = x;\r\n        let nhP = y;\r\n        let nhL = y;\r\n        let pg = 0;\r\n        let ld = 0;\r\n        let pd = 0;\r\n        let lg = 0;\r\n        let licz = 0;\r\n        let color = this.divy[x][y].children[0].getAttribute(\"style\");\r\n        while (nvG > 0 && this.divy[nvG - 1][y].children.length != 0 && color == this.divy[nvG - 1][y].children[0].getAttribute(\"style\"))\r\n            nvG--;\r\n        while (nvD + 1 < this.n && this.divy[nvD + 1][y].children.length != 0 && color == this.divy[nvD + 1][y].children[0].getAttribute(\"style\"))\r\n            nvD++;\r\n        while (nhL > 0 && this.divy[x][nhL - 1].children.length != 0 && color == this.divy[x][nhL - 1].children[0].getAttribute(\"style\"))\r\n            nhL--;\r\n        while (nhP + 1 < this.n && this.divy[x][nhP + 1].children.length != 0 && color == this.divy[x][nhP + 1].children[0].getAttribute(\"style\"))\r\n            nhP++;\r\n        while (y + pg + 1 < this.n && x - pg > 0 && this.divy[x - pg - 1][y + pg + 1].children.length != 0 && color == this.divy[x - pg - 1][y + pg + 1].children[0].getAttribute(\"style\"))\r\n            pg++;\r\n        while (y - ld > 0 && x + ld + 1 < this.n && this.divy[x + ld + 1][y - ld - 1].children.length != 0 && color == this.divy[x + ld + 1][y - ld - 1].children[0].getAttribute(\"style\"))\r\n            ld++;\r\n        while (y + pd + 1 < this.n && x + pd + 1 < this.n && this.divy[x + pd + 1][y + pd + 1].children.length != 0 && color == this.divy[x + pd + 1][y + pd + 1].children[0].getAttribute(\"style\"))\r\n            pd++;\r\n        while (y - lg > 0 && x - lg > 0 && this.divy[x - lg - 1][y - lg - 1].children.length != 0 && color == this.divy[x - lg - 1][y - lg - 1].children[0].getAttribute(\"style\"))\r\n            lg++;\r\n        let mySet = new Set();\r\n        if (pd + lg + 1 > this.inLine - 1)\r\n            for (let i = -1 * lg; i <= pd; i++) {\r\n                if (this.divy[x + i][y + i].children.length > 0) {\r\n                    mySet.add(this.divy[x + i][y + i].children[0]);\r\n                }\r\n                this.tab[x + i][y + i] = 0;\r\n            }\r\n        if (pg + ld + 1 > this.inLine - 1)\r\n            for (let i = -1 * ld; i <= pg; i++) {\r\n                if (this.divy[x - i][y + i].children.length > 0) {\r\n                    mySet.add(this.divy[x - i][y + i].children[0]);\r\n                }\r\n                this.tab[x - i][y + i] = 0;\r\n            }\r\n        if (nhP - nhL + 1 > this.inLine - 1)\r\n            for (let i = nhL; i <= nhP; i++) {\r\n                if (this.divy[x][i].children.length > 0) {\r\n                    mySet.add(this.divy[x][i].children[0]);\r\n                }\r\n                this.tab[x][i] = 0;\r\n            }\r\n        if (nvD - nvG + 1 > this.inLine - 1)\r\n            for (let i = nvG; i <= nvD; i++) {\r\n                if (this.divy[i][y].children.length > 0) {\r\n                    mySet.add(this.divy[i][y].children[0]);\r\n                }\r\n                this.tab[i][y] = 0;\r\n            }\r\n        let arr = Array.from(mySet);\r\n        licz += arr.length;\r\n        if (licz == 0) {\r\n            return true;\r\n        }\r\n        else {\r\n            this.zablokuj = true;\r\n            let control = 0;\r\n            let timer = setInterval(() => {\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    arr[i].style.borderRadius = 50 - 10 * control + \"px\";\r\n                    arr[i].style.width = 50 - 10 * control + \"px\";\r\n                    arr[i].style.height = 50 - 10 * control + \"px\";\r\n                    arr[i].style.top = 0 + 5 * control + \"px\";\r\n                    arr[i].style.left = 0 + 5 * control + \"px\";\r\n                }\r\n                control++;\r\n                if (control == 6) {\r\n                    console.log(control);\r\n                    for (let i = 0; i < arr.length; i++) {\r\n                        arr[i].remove();\r\n                    }\r\n                    clearInterval(timer);\r\n                    if (qq == false) {\r\n                        this.punkty += licz;\r\n                        this.licznikKulek -= licz;\r\n                        document.getElementById(\"punkty\").innerHTML = \"Punkty: \" + this.punkty;\r\n                    }\r\n                    return false;\r\n                }\r\n            }, 50);\r\n        }\r\n    }\r\n    spwan() {\r\n        this.licznikKulek += 3;\r\n        if (this.licznikKulek >= this.n * this.n) {\r\n            Object(_script__WEBPACK_IMPORTED_MODULE_1__[\"reset\"])();\r\n            //document.getElementById(\"restart\").click()\r\n            alert(\"KONIEC GRY\\nWYNIK: \" + this.punkty + \"pkt\");\r\n            return;\r\n        }\r\n        let rand = 0;\r\n        let temp = new Array(6);\r\n        let kolory = [\"blue\", \"red\", \"black\", \"green\", \"darkorchid\"];\r\n        while (rand < 3) {\r\n            let x1 = Math.floor(Math.random() * this.n);\r\n            let y1 = Math.floor(Math.random() * this.n);\r\n            if (this.tab[x1][y1] == 0) {\r\n                this.tab[x1][y1] = -1;\r\n                temp[rand * 2] = x1;\r\n                temp[rand * 2 + 1] = y1;\r\n                rand++;\r\n            }\r\n        }\r\n        rand = 0;\r\n        this.zablokuj = true;\r\n        let int = setInterval(() => {\r\n            let kul = document.createElement(\"div\");\r\n            kul.className = \"kulka\";\r\n            kul.style.backgroundColor = kolory[this.nastKolor[rand]];\r\n            //kul.style.backgroundImage=\"url('./grafiki/\"+kolory[this.nastKolor[rand]]+\".png')\"\r\n            this.divy[temp[rand * 2]][temp[rand * 2 + 1]].appendChild(kul);\r\n            rand++;\r\n            if (rand == 3) {\r\n                clearInterval(int);\r\n                for (let i = 0; i < 3; i++)\r\n                    this.sprawdzPunkty(true, temp[i * 2], temp[i * 2 + 1], false);\r\n                this.losujNastepneKolory();\r\n                this.zablokuj = false;\r\n            }\r\n        }, 200);\r\n    }\r\n    losujNastepneKolory() {\r\n        let kolory = [\"blue\", \"red\", \"black\", \"green\", \"darkorchid\"];\r\n        for (let i = 0; i < 3; i++) {\r\n            let randomik = Math.floor(Math.random() * kolory.length);\r\n            this.nastKolor[i] = randomik;\r\n            //document.getElementById(\"kont\").getElementsByClassName(\"kulkaM\")[i].setAttribute(\"style\", \"background-image:url('./grafiki/\"+kolory[randomik]+\".png')\")\r\n            document.getElementById(\"kont\").getElementsByClassName(\"kulkaM\")[i].setAttribute(\"style\", \"background-color:\" + kolory[randomik]);\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    _decorators__WEBPACK_IMPORTED_MODULE_2__[\"changeInRow\"]\r\n], Kulki.prototype, \"lol\", null);\r\n;\r\n\n\n//# sourceURL=webpack:///./kulki.ts?");

/***/ }),

/***/ "./queue.ts":
/*!******************!*\
  !*** ./queue.ts ***!
  \******************/
/*! exports provided: Queue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Queue\", function() { return Queue; });\nclass Queue {\r\n    constructor() {\r\n        this._store = [];\r\n    }\r\n    push(val) {\r\n        this._store.push(val);\r\n    }\r\n    pop() {\r\n        return this._store.shift();\r\n    }\r\n    isEmpty() {\r\n        if (this._store.length == 0)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./queue.ts?");

/***/ }),

/***/ "./script.ts":
/*!*******************!*\
  !*** ./script.ts ***!
  \*******************/
/*! exports provided: reset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reset\", function() { return reset; });\n/* harmony import */ var _kulki__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kulki */ \"./kulki.ts\");\n\r\nlet nowa;\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    reset();\r\n    document.getElementById(\"restart\").onclick = function () {\r\n        reset();\r\n    };\r\n    document.getElementById(\"zmien\").onclick = function () {\r\n        nowa.lol(nowa.inLine);\r\n    };\r\n});\r\nfunction reset() {\r\n    document.getElementById(\"punkty\").innerHTML = \"Punkty: 0\";\r\n    nowa = new _kulki__WEBPACK_IMPORTED_MODULE_0__[\"Kulki\"](9, 5);\r\n}\r\n\n\n//# sourceURL=webpack:///./script.ts?");

/***/ })

/******/ });